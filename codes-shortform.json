[
  {
    "opcode": "0x00",
    "name": "STOP",
    "desc": "halts execution",
    "gas": "0"
  },
  {
    "opcode": "0x01",
    "name": "ADD",
    "desc": "addition operation"
  },
  {
    "opcode": "0x02",
    "name": "MUL",
    "desc": "multiplication operation",
    "gas": "5"
  },
  {
    "opcode": "0x03",
    "name": "SUB",
    "desc": "subtraction operation",
    "gas": "3"
  },
  {
    "opcode": "0x04",
    "name": "DIV",
    "desc": "integer division operation",
    "gas": "5"
  },
  {
    "opcode": "0x05",
    "name": "SDIV",
    "desc": "signed integer division operation (truncated)",
    "gas": "5"
  },
  {
    "opcode": "0x06",
    "name": "MOD",
    "desc": "modulo remainder operation",
    "gas": "5"
  },
  {
    "opcode": "0x07",
    "name": "SMOD",
    "desc": "signed modulo remainder operation",
    "gas": "5"
  },
  {
    "opcode": "0x08",
    "name": "ADDMOD",
    "desc": "modulo addition operation",
    "gas": "8"
  },
  {
    "opcode": "0x09",
    "name": "MULMOD",
    "desc": "modulo multiplication operation",
    "gas": "8"
  },
  {
    "opcode": "0x0a",
    "name": "EXP",
    "desc": "exponential operation",
    "gas": "10*"
  },
  {
    "opcode": "0x0b",
    "name": "SIGNEXTEND",
    "desc": "extend length of two's complement signed integer",
    "gas": "5"
  },
  {
    "opcode": "0x0c-0x0f",
    "name": "unused",
    "desc": "unused"
  },
  {
    "opcode": "0x10",
    "name": "LT",
    "desc": "less-than comparison",
    "gas": "3"
  },
  {
    "opcode": "0x11",
    "name": "GT",
    "desc": "greater-than comparison",
    "gas": "3"
  },
  {
    "opcode": "0x12",
    "name": "SLT",
    "desc": "signed less-than comparison",
    "gas": "3"
  },
  {
    "opcode": "0x13",
    "name": "SGT",
    "desc": "signed greater-than comparison",
    "gas": "3"
  },
  {
    "opcode": "0x14",
    "name": "EQ",
    "desc": "equality comparison",
    "gas": "3"
  },
  {
    "opcode": "0x15",
    "name": "ISZERO",
    "desc": "simple not operator",
    "gas": "3"
  },
  {
    "opcode": "0x16",
    "name": "AND",
    "desc": "bitwise AND operation",
    "gas": "3"
  },
  {
    "opcode": "0x17",
    "name": "OR",
    "desc": "bitwise OR operation",
    "gas": "3"
  },
  {
    "opcode": "0x18",
    "name": "XOR",
    "desc": "bitwise XOR operation",
    "gas": "3"
  },
  {
    "opcode": "0x19",
    "name": "NOT",
    "desc": "bitwise NOT operation",
    "gas": "3"
  },
  {
    "opcode": "0x1a",
    "name": "BYTE",
    "desc": "retrieve single byte from word",
    "gas": "3"
  },
  {
    "opcode": "0x1b",
    "name": "SHL",
    "desc": "shift left",
    "notes": "EIP145",
    "gas": "3"
  },
  {
    "opcode": "0x1c",
    "name": "SHR",
    "desc": "logical shift right",
    "notes": "EIP145",
    "gas": "3"
  },
  {
    "opcode": "0x1d",
    "name": "SAR",
    "desc": "arithmetic shift right",
    "notes": "EIP145",
    "gas": "3"
  },
  {
    "opcode": "0x20",
    "name": "KECCAK256",
    "desc": "compute keccak-256 hash",
    "gas": "30*"
  },
  {
    "opcode": "0x30",
    "name": "ADDRESS",
    "desc": "get address of currently executing account",
    "gas": "2"
  },
  {
    "opcode": "0x31",
    "name": "BALANCE",
    "desc": "get balance of the given account",
    "gas": "700"
  },
  {
    "opcode": "0x32",
    "name": "ORIGIN",
    "desc": "get execution origination address",
    "gas": "2"
  },
  {
    "opcode": "0x33",
    "name": "CALLER",
    "desc": "get caller address",
    "gas": "2"
  },
  {
    "opcode": "0x34",
    "name": "CALLVALUE",
    "desc": "get deposited value by the instruction/transaction responsible for this execution",
    "gas": "2"
  },
  {
    "opcode": "0x35",
    "name": "CALLDATALOAD",
    "desc": "get input data of current environment",
    "gas": "3"
  },
  {
    "opcode": "0x36",
    "name": "CALLDATASIZE",
    "desc": "get size of input data in current environment",
    "gas": "2*"
  },
  {
    "opcode": "0x37",
    "name": "CALLDATACOPY",
    "desc": "copy input data in current environment to memory",
    "gas": "3"
  },
  {
    "opcode": "0x38",
    "name": "CODESIZE",
    "desc": "get size of code running in current environment",
    "gas": "2"
  },
  {
    "opcode": "0x39",
    "name": "CODECOPY",
    "desc": "copy code running in current environment to memory",
    "gas": "3*"
  },
  {
    "opcode": "0x3a",
    "name": "GASPRICE",
    "desc": "get price of gas in current environment",
    "gas": "2"
  },
  {
    "opcode": "0x3b",
    "name": "EXTCODESIZE",
    "desc": "get size of an account's code",
    "gas": "700"
  },
  {
    "opcode": "0x3c",
    "name": "EXTCODECOPY",
    "desc": "copy an account's code to memory",
    "gas": "700*"
  },
  {
    "opcode": "0x3d",
    "name": "RETURNDATASIZE",
    "desc": "pushes the size of the return data buffer onto the stack",
    "notes": "EIP211",
    "gas": "2"
  },
  {
    "opcode": "0x3e",
    "name": "RETURNDATACOPY",
    "desc": "copies data from the return data buffer to memory",
    "notes": "EIP211",
    "gas": "3"
  },
  {
    "opcode": "0x3f",
    "name": "EXTCODEHASH",
    "desc": "returns the keccak256 hash of a contract's code",
    "notes": "EIP 1052",
    "gas": "700"
  },
  {
    "opcode": "0x40",
    "name": "BLOCKHASH",
    "desc": "get the hash of one of the 256 most recent complete blocks",
    "gas": "20"
  },
  {
    "opcode": "0x41",
    "name": "COINBASE",
    "desc": "get the block's beneificiary address",
    "gas": "2"
  },
  {
    "opcode": "0x42",
    "name": "TIMESTAMP",
    "desc": "get the block's timestamp",
    "gas": "2",
  },
  {
    "opcode": "0x43",
    "name": "NUMBER",
    "desc": "get the block's number",
    "gas": "2"
  },
  {
    "opcode": "0x44",
    "name": "DIFFICULTY",
    "desc": "get the block's difficulty",
    "gas": "2"
  },
  {
    "opcode": "0x45",
    "name": "GASLIMIT",
    "desc": "get the block's gas limit",
    "gas": "2"
  },
  {
    "opcode": "0x46",
    "name": "CHAINID",
    "desc": "returns the current chain's eip-155 unique identifier",
    "notes": "EIP1344",
    "gas": "2"
  },
  {
    "opcode": "0x47-0x4f",
    "name": "unused",
    "desc": "unused"
  },
  {
    "opcode": "0x48",
    "name": "BASEFEE",
    "desc": "returns the value of the base fee of the current block it is executing in.",
    "notes": "EIP3198",
    "gas": "2"
  },
  {
    "opcode": "0x50",
    "name": "POP",
    "desc": "remove word from stack",
    "gas": "2"
  },
  {
    "opcode": "0x51",
    "name": "MLOAD",
    "desc": "load word from memory",
    "gas": "3*"
  },
  {
    "opcode": "0x52",
    "name": "MSTORE",
    "desc": "save word from memory.",
    "gas ": "3*"
  },
  {
    "opcode": "0x53",
    "name": "MSTORE8",
    "desc": "save byte to memory.",
    "gas": "3"
  },
  {
    "opcode": "0x54",
    "name": "SLOAD",
    "desc": "load word from storage.",
    "gas": "800"
  },
  {
    "opcode": "0x55",
    "name": "SSTORE",
    "desc": "save word to storage.",
    "gas": "20000**"
  },
  {
    "opcode": "0x56",
    "name": "JUMP",
    "desc": "alter the program counter",
    "gas": "8"
  },
  {
    "opcode": "0x57",
    "name": "JUMPI",
    "desc": "conditionally alter the program counter",
    "gas": "10"
  },
  {
    "opcode": "0x58",
    "name": "GETPC",
    "desc": "get the value of the program counter prior to the increment",
    "gas": "2"
  },
  {
    "opcode": "0x59",
    "name": "MSIZE",
    "desc": "get the size of the active memory in bytes.",
    "gas": "2"
  },
  {
    "opcode": "0x5a",
    "name": "GAS",
    "desc": "get the amount of available gas, including the corresponding reduction for the cost of this instruction.",
    "gas": "2"
  },
  {
    "opcode": "0x5b",
    "name": "JUMPDEST",
    "desc": "mark a valid destination for jumps",
    "gas": "1"
  },
  {
    "opcode": "0x5c-ox5f",
    "name": "unused",
    "desc": "unused"
  },
  {
    "opcode": "0x60",
    "name": "PUSH1",
    "desc": "place 1 byte item on stack",
    "gas": "3"
  },
  {
    "opcode": "0x61",
    "name": "PUSH2",
    "desc": "place 2-byte item on stack",
    "gas": "3"
  }
]