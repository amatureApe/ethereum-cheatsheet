[
  {
    "opcode": "00",
    "name": "STOP",
    "mingas": "0",
    "since": "frontier",
    "group": "stop&arithmetic",
    "notes": "Exits the current context successfully.\n\nWhen a call is executed on an address with no code and the EVM tries to read the code data, the default value is returned, 0, which corresponds to the this instruction and halts the execution."
  },
  {
    "opcode": "01",
    "name": "ADD",
    "mingas": "3",
    "since": "frontier",
    "group": "stop&arithmetic",
    "input": {
      "a": "first integer value to add",
      "b": "second integer value to add"
    },
    "output": {
      "a + b": "integer result of the addition modulo 2^256."
    },
    "errors": "The state changes done by the current context are reverted in the following cases:\n\nNot enough gas.\nNot enough values on the stack."
  },
  {
    "opcode": "02",
    "name": "MUL",
    "mingas": "5",
    "since": "frontier",
    "group": "stop&arithmetic",
    "input": {
      "a": "first integer value to multiply.",
      "b": "second integer value to multiply."
    },
    "output": {
      "a * b": "integer result of the multiplication modulo 2^256."
    },
    "errors": "The state changes done by the current context are reverted int he following cases:\n\nNot enough gas.\nNot enough values on the stack."
  },
  {
    "opcode": "03",
    "name": "SUB",
    "mingas": "3",
    "since": "frontier",
    "group": "stop&arithmetic",
    "input": {
      "a": "first integer value.",
      "b": "integer value to subtract from the first."
    },
    "output": {
      "a - b": "integer result of the subtraction modulo 2^256"
    },
    "errors": "The state changes done by the current context are reverted in the following cases:\n\nNot enough gas.\nNot enough values on the stack."
  },
  {
    "opcode": "04",
    "name": "DIV",
    "mingas": "5",
    "since": "frontier",
    "group": "stop&arithmetic",
    "input": {
      "a": "integer numerator.",
      "b": "integer denominator."
    },
    "output": {
      "a / b": "integer result of the integer division. If the denominator is 0, the result will be 0."
    },
    "errors": "The state changes done by the current context are reverted in the following cases\n\nNot enough gas.\nNot enough values on the stack."
  },
  {
    "opcode": "05",
    "name": "SDIV",
    "mingas": "5",
    "since": "frontier",
    "group": "stop&arithmetic",
    "notes": "All values are treated as two's complement signed 256-bit integers. Note the overflow semantic when -2^256 is negated.",
    "input": {
      "a": "integer numerator.",
      "b": "integer denominator."
    },
    "output": {
      "a / b": "integer result of the signed integer division. If the denominator is 0, the result will be 0."
    },
    "errors": "The state changes done by the current context are reverted in the following cases:\n\nNot enough gas.\nNot enough values on the stack."
  },
  {
    "opcode": "06",
    "name": "MOD",
    "mingas": "5",
    "since": "frontier",
    "group": "stop&arithmetic",
    "input": {
      "a": "integer numerator.",
      "b": "integer denominator."
    },
    "output": {
      "a % b": "integer result of the integer modulo. If the denominator is 0, the result will be 0."
    },
    "errors": "The state changes done by the current context are reverted in the following cases:\n\nNot enough gas.\nNot enough values on the stack."
  },
  {
    "opcode": "07",
    "name": "SMOD",
    "mingas": "5",
    "since": "frontier",
    "group": "stop&arithmetic",
    "notes": "All values are treated as two's complement signed 256-bit integers. Note the overflow semantic when -2^256 is negated.",
    "input": {
      "a": "integer numerator.",
      "b": "integer denominator."
    },
    "output": {
      "a % b": "integer result of the signed integer modulo. If the denominator is 0, the result will be 0."
    },
    "errors": "The state changes done by the current context are reverted in the following cases:\n\nNot enough gas.\nNot enough values on the stack."
  },
  {
    "opcode": "08",
    "name": "ADDMOD",
    "mingas": "8",
    "since": "frontier",
    "group": "stop&arithmetic",
    "notes": "All intermediate calculations of this operation are not subject to the 2^256 modulo.",
    "input": {
      "a": "first integer value to add.",
      "b": "second integer value to add.",
      "N": "integer denominator."
    },
    "output": {
      "(a + b) % N": "integer result of the addition followed by a modulo. If the denominator is 0, the result will be 0."
    },
    "errors": "The state changes done by the current context are reverted in the following cases:\n\nNot enough gas.\nNot enough values on the stack."
  },
  {
    "opcode": "09",
    "name": "MULMOD",
    "mingas": "8",
    "since": "frontier",
    "group": "stop&arithmetic",
    "notes": "All intermediate calculations of this operation are not subject to the 2^256 modulo.",
    "input": {
      "a": "the first integer value to multiply.",
      "b": "second integer value to multiply.",
      "N": "integer denominator."
    },
    "output": {
      "(a * b) % N": "integer result of the multiplication followed by a modulo. If the denominator is 0, the result will be 0."
    },
    "errors": "The state changes done by the current context are reverted in the following cases:\n\nNot enough gas.\nNot enough values on the stack."
  },
  {
    "opcode": "0A",
    "name": "EXP",
    "mingas": "10",
    "since": "frontier",
    "group": "stop&arithmetic",
    "input": {
      "a": "integer base.",
      "b": "integer exponent."
    },
    "output": {
      "a ** b": "integer result of the exponential operation modulo 2^256."
    },
    "errors": "The state changes done by the current context are reverted in the following cases:\n\nNot enough gas.\nNot enough values on the stack."
  }
]